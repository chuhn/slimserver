From: Christopher Huhn <c.huhn@gsi.de>
Date: Sun, 26 Nov 2017 22:06:40 +0100
Subject: Replace Digest::SHA1 with Digest::SHA

Digest::SHA from Perl core modules is available in Debian as libdigest-sha-perl
---
 Slim/Control/Commands.pm                   | 2 +-
 Slim/Networking/SqueezeNetwork.pm          | 2 +-
 Slim/Plugin/iTunes/Common.pm               | 4 ++--
 Slim/Utils/Firmware.pm                     | 6 +++---
 Slim/Utils/Misc.pm                         | 2 +-
 Slim/Utils/PluginDownloader.pm             | 4 ++--
 Slim/Utils/Strings.pm                      | 2 +-
 Slim/Web/HTTP.pm                           | 2 +-
 Slim/Web/Settings/Server/Security.pm       | 2 +-
 Slim/Web/Settings/Server/SqueezeNetwork.pm | 2 +-
 Slim/Web/Settings/Server/Wizard.pm         | 2 +-
 Slim/bootstrap.pm                          | 2 +-
 12 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/Slim/Control/Commands.pm b/Slim/Control/Commands.pm
index 66e009f..8d6fe8b 100644
--- a/Slim/Control/Commands.pm
+++ b/Slim/Control/Commands.pm
@@ -29,7 +29,7 @@ use Scalar::Util qw(blessed);
 use File::Spec::Functions qw(catfile);
 use File::Basename qw(basename);
 use Digest::MD5 qw(md5_hex);
-use Digest::SHA1 qw(sha1_base64);
+use Digest::SHA qw(sha1_base64);
 use JSON::XS::VersionOneAndTwo;
 
 use Slim::Utils::Alarm;
diff --git a/Slim/Networking/SqueezeNetwork.pm b/Slim/Networking/SqueezeNetwork.pm
index f1c8efb..4111562 100644
--- a/Slim/Networking/SqueezeNetwork.pm
+++ b/Slim/Networking/SqueezeNetwork.pm
@@ -10,7 +10,7 @@ package Slim::Networking::SqueezeNetwork;
 use strict;
 use base qw(Slim::Networking::SimpleAsyncHTTP Slim::Networking::SqueezeNetwork::Base);
 
-use Digest::SHA1 qw(sha1_base64);
+use Digest::SHA qw(sha1_base64);
 use JSON::XS::VersionOneAndTwo;
 use MIME::Base64 qw(encode_base64);
 use List::Util qw(max);
diff --git a/Slim/Plugin/iTunes/Common.pm b/Slim/Plugin/iTunes/Common.pm
index e266c2b..1c66f3b 100644
--- a/Slim/Plugin/iTunes/Common.pm
+++ b/Slim/Plugin/iTunes/Common.pm
@@ -29,7 +29,7 @@ package Slim::Plugin::iTunes::Common;
 use strict;
 use base qw(Class::Data::Inheritable);
 
-use Digest::SHA1;
+use Digest::SHA;
 use File::Spec::Functions qw(:ALL);
 use File::Basename;
 
@@ -267,7 +267,7 @@ sub getLibraryChecksum {
 	open my $fh, '<', $file;
 	binmode $fh;
 	
-	my $sha1 = Digest::SHA1->new;
+	my $sha1 = Digest::SHA->new;
 	$sha1->addfile($fh);
 	my $checksum = $sha1->hexdigest;
 	
diff --git a/Slim/Utils/Firmware.pm b/Slim/Utils/Firmware.pm
index 7496fef..4a8404a 100644
--- a/Slim/Utils/Firmware.pm
+++ b/Slim/Utils/Firmware.pm
@@ -28,7 +28,7 @@ file before being saved.
 
 use strict;
 
-use Digest::SHA1;
+use Digest::SHA;
 use File::Basename;
 use File::Slurp qw(read_file);
 use File::Spec::Functions qw(:ALL);
@@ -392,7 +392,7 @@ sub download {
 			open my $fh, '<', $file or fatal("Unable to read $file to verify firmware\n");
 			binmode $fh;
 
-			my $sha1 = Digest::SHA1->new;
+			my $sha1 = Digest::SHA->new;
 			$sha1->addfile($fh);
 			close $fh;
 
@@ -518,7 +518,7 @@ sub downloadAsyncSHADone {
 	open my $fh, '<', "$file.tmp" or return downloadAsyncError( $http, "Unable to read $file to verify firmware" );
 	binmode $fh;
 
-	my $sha1 = Digest::SHA1->new;
+	my $sha1 = Digest::SHA->new;
 	$sha1->addfile($fh);
 	close $fh;
 
diff --git a/Slim/Utils/Misc.pm b/Slim/Utils/Misc.pm
index ab9a253..537b39e 100644
--- a/Slim/Utils/Misc.pm
+++ b/Slim/Utils/Misc.pm
@@ -42,7 +42,7 @@ use Time::HiRes;
 use URI;
 use URI::Escape;
 use URI::file;
-use Digest::SHA1 qw(sha1_hex);
+use Digest::SHA qw(sha1_hex);
 
 # These must be 'required', as they use functions from the Misc module!
 require Slim::Music::Info;
diff --git a/Slim/Utils/PluginDownloader.pm b/Slim/Utils/PluginDownloader.pm
index 2c1c2d5..de36e73 100644
--- a/Slim/Utils/PluginDownloader.pm
+++ b/Slim/Utils/PluginDownloader.pm
@@ -15,7 +15,7 @@ use strict;
 
 use File::Spec::Functions qw(:ALL);
 use File::Path;
-use Digest::SHA1;
+use Digest::SHA;
 
 use Slim::Networking::SimpleAsyncHTTP;
 use Slim::Utils::Prefs;
@@ -234,7 +234,7 @@ sub _installDownload {
 sub _getDigest {
 	my ($file) = @_;
 
-	my $sha1 = Digest::SHA1->new;
+	my $sha1 = Digest::SHA->new;
 
 	open my $fh, '<', $file or $log->error("Failed to open $file");
 
diff --git a/Slim/Utils/Strings.pm b/Slim/Utils/Strings.pm
index 7d696b2..a0e3a4f 100644
--- a/Slim/Utils/Strings.pm
+++ b/Slim/Utils/Strings.pm
@@ -40,7 +40,7 @@ use Exporter::Lite;
 our @EXPORT_OK = qw(string cstring clientString);
 
 use Config;
-use Digest::SHA1 qw(sha1_hex);
+use Digest::SHA qw(sha1_hex);
 use POSIX qw(setlocale LC_TIME LC_COLLATE);
 use File::Basename;
 use File::Slurp qw(read_file write_file);
diff --git a/Slim/Web/HTTP.pm b/Slim/Web/HTTP.pm
index 1226d90..b3c8695 100644
--- a/Slim/Web/HTTP.pm
+++ b/Slim/Web/HTTP.pm
@@ -10,7 +10,7 @@ use strict;
 
 use AnyEvent::Handle;
 use CGI::Cookie;
-use Digest::SHA1 qw(sha1_base64);
+use Digest::SHA qw(sha1_base64);
 use FileHandle ();
 use File::Basename qw(basename);
 use File::Spec::Functions qw(:ALL);
diff --git a/Slim/Web/Settings/Server/Security.pm b/Slim/Web/Settings/Server/Security.pm
index 55b3e18..1e1ac12 100644
--- a/Slim/Web/Settings/Server/Security.pm
+++ b/Slim/Web/Settings/Server/Security.pm
@@ -7,7 +7,7 @@ package Slim::Web::Settings::Server::Security;
 # version 2.
 
 use strict;
-use Digest::SHA1 qw(sha1_base64);
+use Digest::SHA qw(sha1_base64);
 use base qw(Slim::Web::Settings);
 
 use Slim::Utils::Prefs;
diff --git a/Slim/Web/Settings/Server/SqueezeNetwork.pm b/Slim/Web/Settings/Server/SqueezeNetwork.pm
index 42cb414..e6c7b15 100644
--- a/Slim/Web/Settings/Server/SqueezeNetwork.pm
+++ b/Slim/Web/Settings/Server/SqueezeNetwork.pm
@@ -8,7 +8,7 @@ package Slim::Web::Settings::Server::SqueezeNetwork;
 
 use strict;
 use base qw(Slim::Web::Settings);
-use Digest::SHA1 qw(sha1_base64);
+use Digest::SHA qw(sha1_base64);
 
 use Slim::Networking::SqueezeNetwork;
 use Slim::Utils::Strings qw(string);
diff --git a/Slim/Web/Settings/Server/Wizard.pm b/Slim/Web/Settings/Server/Wizard.pm
index b4a4bdd..b6c3419 100644
--- a/Slim/Web/Settings/Server/Wizard.pm
+++ b/Slim/Web/Settings/Server/Wizard.pm
@@ -7,7 +7,7 @@ package Slim::Web::Settings::Server::Wizard;
 
 use strict;
 use base qw(Slim::Web::Settings);
-use Digest::SHA1 qw(sha1_base64);
+use Digest::SHA qw(sha1_base64);
 use HTTP::Status qw(RC_MOVED_TEMPORARILY);
 
 use Slim::Utils::Log;
diff --git a/Slim/bootstrap.pm b/Slim/bootstrap.pm
index 8084c50..a99b0e8 100644
--- a/Slim/bootstrap.pm
+++ b/Slim/bootstrap.pm
@@ -50,7 +50,7 @@ use Slim::Utils::OSDetect;
 
 # Here's what we want to try and load. This will need to be updated
 # when a new XS based module is added to our CPAN tree.
-my @default_required_modules = qw(version Time::HiRes DBI EV XML::Parser::Expat HTML::Parser JSON::XS Digest::SHA1 YAML::XS Sub::Name);
+my @default_required_modules = qw(version Time::HiRes DBI EV XML::Parser::Expat HTML::Parser JSON::XS Digest::SHA YAML::XS Sub::Name);
 my @default_optional_modules = ();
 
 my $d_startup                = (grep { /d_startup/ } @ARGV) ? 1 : 0;
